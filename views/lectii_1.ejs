<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('./partials/head.ejs') %>
    <link rel="stylesheet" href="/css/lectia_1.css">
    <style>

    </style>
</head>
<body>
    <header>
        <%- include('./partials/header.ejs') %>
    </header>

    <main>
        <h1>Lecția 1 <br> Ciurul lui Eratostene</h1>
        <div class="teory">
            <div class="teoryMenu">
                <h2 id="teoryTitle">Card 1</h2>
                <h2 id="teorySubtitle">Începutul</h2>
                <div class="teoryMenuButtons">
                    <button onclick="previousTeory()" id="previousButton">Precedentul</button>
                    <button onclick="nextTeory()" id="nextButton">Următorul</button>
                </div>
            </div>
            <div id="teoryCard">
                <h2 id="teoryText">Se utilizează pentru a determină toate numerele <code>prime</code> mai mici sau egale cu <code>N</code>. Prin definiție un număr <code>x</code> este <code>prim</code> dacă și numai dacă are doar doi divizori. Numărul 2 este primul număr prim, și este <code>singurul</code> număr par prim.</h2>
            </div>
        </div>

        <div id="cardsTitle">
            <h3>Încearcă pentru N=</h3>
            <input id="NInput" type="number" max="100" min="0" placeholder="N:2-150" value="100">
        </div>

        <div class="container">
            <div class="card">
                <h2>Code</h2>
                <div class="cardContent">
                    <textarea id="code" spellcheck="false" readonly>
#include  
using namespace std;

int ciur[1000003],N // Determinăm numerele prime mai mici decât un milion 

int main()
{
   int i,j;
   cin>>N;
   ciur[0]=ciur[1]=1;

   //Marcăm cu 1 (nu sunt prime) toate numerele pare >= 4
   for(i=4;i<=N;i=i+2)
   {
      ciur[i] = 1;
   }

   //Parcurgem numerele impare >=3
   for(i=3;i*i<=N;i=i+2)
   {
      if(ciur[i]==0) //i este prim,dar multiplii săi nu
      {
         for(j=i*i;j<=N;j=j+2*i) //Pasul va fi dublul lui i
         {
            ciur[j] = 1;
         }
      }
   }

   for(i=0;i<=N;i++)
   {
      if(ciur[i]==0)
      {
         cout<<i<<' ';
      }
   }
   return 0;
}
                    </textarea>
                </div>
                <div class="cardFooter">
                    <div class="cardFooterLeft">
                        <a><i class="fa-solid fa-expand footerIco expandIco"></i></a>
                        <a><i class="fa-solid fa-minimize footerIco"></i></a> 
                        <a><i class="fa-solid fa-circle-info footerIco"></i></a>
                    </div>
                    <div class="cardFooterRight">

                    </div>
                </div>
            </div>


            <div class="card">
                <h2>Vizualizare grafică</h2>
                <div class="cardContent">
                    <div class="stepsContainer" id="stepsContainer">
                        <div class="stepsContainer" id="stepsContainer"></div>
                    </div>
                    <div class="startButtons">
                        <div class="stepsContainer" id="stepsContainer"></div>
                    </div>
                </div>
                <div class="cardFooter">
                    <div class="cardFooterLeft">
                        <a><i class="fa-solid fa-expand footerIco expandIco"></i></a>
                        <a><i class="fa-solid fa-minimize footerIco"></i></a> 
                        <a><i class="fa-solid fa-circle-info footerIco"></i></a>
                    </div>
                    <div class="cardFooterRight" id="GraficRight">
                            <button id="btnPrev" class="GraficBtn" onclick="prevStep()" disabled>Precedent</button>
                            <button id="btnNext" class="GraficBtn" onclick="nextStep()">Următorul</button>
                    </div>
                </div>
            </div>

            <div class="card">
                <h2>Vizualizarea numerelor prime</h2>
                <div class="cardContent">
                    <div id="grid">
                        <!-- Grid cells will be generated here -->
                    </div>
                </div>
                <div class="cardFooter">
                    <div class="cardFooterLeft">
                        <a><i class="fa-solid fa-expand footerIco expandIco"></i></a>
                        <a><i class="fa-solid fa-minimize footerIco"></i></a> 
                        <a><i class="fa-solid fa-circle-info footerIco"></i></a>
                    </div>
                    <div class="cardFooterRight">
                        <button id="runBtn" onclick="RunButtonPressed()">Rulează</button>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <footer>
        <%- include('./partials/footer.ejs') %>
    </footer>

    <script src="/js/lectia_1.js"></script>
</body>
</html>